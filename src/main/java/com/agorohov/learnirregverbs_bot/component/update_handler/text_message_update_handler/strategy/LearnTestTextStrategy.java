package com.agorohov.learnirregverbs_bot.component.update_handler.text_message_update_handler.strategy;

import com.agorohov.learnirregverbs_bot.component.learning.learn_session.*;
import com.agorohov.learnirregverbs_bot.component.learning.test_buttons.*;
import com.agorohov.learnirregverbs_bot.component.update_handler.ProcessingStrategy;
import com.agorohov.learnirregverbs_bot.component.update_handler.UpdateWrapper;
import com.agorohov.learnirregverbs_bot.utils.MessageBuilder;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.BotApiMethod;

@Component
@RequiredArgsConstructor
public class LearnTestTextStrategy implements ProcessingStrategy {

    private final LearnSessionKeeper sessionKeeper;
    private final TestButtonsBuilder buttonsBuilder;

    @Override
    public BotApiMethod processUpdate(UpdateWrapper wrapper) {
        wrapper.setStrategy(this.getClass().getSimpleName());

        String textToSend = null;
        var sendMessage = MessageBuilder
                .create()
                .setChatId(wrapper.getMessage().getChatId());

        // –µ—Å—Ç—å –ª–∏ –≤ LearnSessionKeeper —Å–µ—Å—Å–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?
        boolean isSessionExist = sessionKeeper.isExist(wrapper.getMessage().getChatId());

        if (!isSessionExist) {
            textToSend = "ùïãùïñùï§ùï•\n\n"
                    + "–í—Ä–µ–º—è –≤—ã—à–ª–æ, –≤—ã–±–µ—Ä–∏ –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ.";

            sendMessage
                    .setText(textToSend)
                    .row()
                    .button("< —É—á–∏—Ç—å –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ", "/learn")
                    .endRow()
                    .row()
                    .button("<< –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "/start")
                    .endRow();
        } else {
            // –¥–æ—Å—Ç–∞—ë–º —Å–µ—Å—Å–∏—é, —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç–∞
            LearnSession session = sessionKeeper.get(wrapper.getMessage().getChatId());
            TestButtons testButtons = buttonsBuilder.create(session.getVerb());

            textToSend = "ùïãùïñùï§ùï•\n\n"
                    + "–ü—Ä–æ–π–¥—ë–º —Ç–µ—Å—Ç!\n\n"
                    + "–í—ã–±–µ—Ä–∏ —Ç—Ä–∏ —Ñ–æ—Ä–º—ã –≥–ª–∞–≥–æ–ª–∞ \"" + session.getVerb().getTranslation() + "\" –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.";

            sendMessage
                    .setText(textToSend)
                    .row()
                    .button(testButtons.getButtonText(0), testButtons.getCallbackData(0))
                    .button(testButtons.getButtonText(1), testButtons.getCallbackData(1))
                    .button(testButtons.getButtonText(2), testButtons.getCallbackData(2))
                    .endRow()
                    .row()
                    .button(testButtons.getButtonText(3), testButtons.getCallbackData(3))
                    .button(testButtons.getButtonText(4), testButtons.getCallbackData(4))
                    .button(testButtons.getButtonText(5), testButtons.getCallbackData(5))
                    .endRow()
                    .row()
                    .button(testButtons.getButtonText(6), testButtons.getCallbackData(6))
                    .button(testButtons.getButtonText(7), testButtons.getCallbackData(7))
                    .button(testButtons.getButtonText(8), testButtons.getCallbackData(8))
                    .endRow()
                    .row()
                    .button(testButtons.getButtonText(9), testButtons.getCallbackData(9))
                    .button(testButtons.getButtonText(10), testButtons.getCallbackData(10))
                    .button(testButtons.getButtonText(11), testButtons.getCallbackData(11))
                    .endRow()
                    .row()
                    .button("< —É—á–∏—Ç—å –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ", "/learn")
                    .endRow()
                    .row()
                    .button("<< –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "/start")
                    .endRow();
        }

        return updateOrCreateMessage(wrapper, sendMessage);
    }
}
